// Generated by CoffeeScript 1.9.3
(function() {
  var message;

  message = "Поздравляю, если Вы видите это, Вы по-прежнему приглашены на девичник Анастасии! Соизвольте явиться, как и было оговорено, 20 декабря (воскресенье) текущего года в Литературное кафе COOK&GEEK на Петроградской Стороне, по адресу Большой проспект, 81 (кому требуются дополнительные вводные — высылайте голубиную почту). Проходить на территорию сего милейшего мероприятия без благостного настроя воспрещается.";

  $(function() {
    var action, animate_restore, animate_shuffle, ch, click_tap, h, i, j, k, l, len, len1, max_height, max_width, ref, ref1, results, state, states, w;
    $("body").css("background", "#293134");
    $("body").css("color", "#293134");
    ref = [$(window).width(), $(window).height()], w = ref[0], h = ref[1];
    for (i = j = 0, len = message.length; j < len; i = ++j) {
      ch = message[i];
      if (ch === " ") {
        ch = "&nbsp;";
      }
      $(".inner").append("<div id='char" + i + "' class='inline'>" + ch + "</div>");
    }
    states = (function() {
      results = [];
      for (var k = 0, ref1 = message.length; 0 <= ref1 ? k < ref1 : k > ref1; 0 <= ref1 ? k++ : k--){ results.push(k); }
      return results;
    }).apply(this).map(function(i) {
      var o;
      o = $("#char" + i);
      return {
        offset: o.offset(),
        object: o
      };
    });
    max_width = Math.max.apply(Math, states.map(function(state) {
      return state.object.width();
    }));
    max_height = Math.max.apply(Math, states.map(function(state) {
      return state.object.height();
    }));
    $("div").removeClass("inline");
    for (l = 0, len1 = states.length; l < len1; l++) {
      state = states[l];
      state.object.addClass("absolute").offset(state.offset);
    }
    animate_shuffle = (function(_this) {
      return function() {
        var len2, m, results1;
        results1 = [];
        for (m = 0, len2 = states.length; m < len2; m++) {
          state = states[m];
          results1.push(state.object.velocity({
            left: Math.random() * (w - max_width),
            top: Math.random() * (h - max_height)
          }, 1000));
        }
        return results1;
      };
    })(this);
    animate_restore = function() {
      var len2, m, results1;
      results1 = [];
      for (m = 0, len2 = states.length; m < len2; m++) {
        state = states[m];
        results1.push(state.object.velocity({
          left: state.offset.left,
          top: state.offset.top
        }, 1000));
      }
      return results1;
    };
    action = animate_restore;
    animate_shuffle();
    $("body").css("color", "#e0e2e4");
    click_tap = (function(_this) {
      return function() {
        console.log("click");
        action();
        return action = action === animate_shuffle ? animate_restore : animate_shuffle;
      };
    })(this);
    $("body").on("click", click_tap);
    return $("body").on("tap", click_tap);
  });

}).call(this);
